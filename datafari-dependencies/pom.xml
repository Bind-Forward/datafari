<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.francelabs.datafari</groupId>
	<artifactId>datafari-dependencies</artifactId>
	<!-- Dependencies POM of datafari -->
	<packaging>pom</packaging>
	<version>3.0-SNAPSHOT</version>
	<name>Datafari Enterprise Search - Dependencies POM</name>

	<dependencies>
		<!-- Local Maven repo dependencies -->
		<dependency>
			<groupId>org.apache.manifoldcf</groupId>
			<artifactId>mcf-core</artifactId>
			<version>2.4</version>
		</dependency>

		<!-- Remote Maven repo dependencies -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>org.apache.solr</groupId>
			<artifactId>solr-solrj</artifactId>
			<version>5.5.1</version>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.8</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.2.11</version>
		</dependency>

		<!-- Reference implementation for javax.mail API, needed for Alerts at 
			compilation and runtime -->
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
			<version>1.5.5</version>
		</dependency>

		<!-- Javax.servlet: We were using version 3.0.FR -->
		<!-- <dependency> <groupId>javax.servlet</groupId> <artifactId>javax.servlet-api</artifactId> 
			<version>3.0.1</version> </dependency> -->
		<!-- Replaced by version 3.1.0 to try to fix the Java Verify exception 
			on classes AlertsAdmin, GetAllUsersAndRoles, GetFavorites, GetLikesFavorites -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.datastax.cassandra</groupId>
			<artifactId>cassandra-driver-core</artifactId>
			<version>2.1.8</version>
		</dependency>
		<!-- Use JSON compiled with Java 7, otherwise we get UnsupportedVersion 
			exception or even Verify exception -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20131018</version>
		</dependency>
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.8.2</version>
		</dependency>
		<!-- Jericho: Not sure which version was used by datafari (no info about 
			it and size of jar is completely different from the one in Maven -->
		<dependency>
			<groupId>net.htmlparser.jericho</groupId>
			<artifactId>jericho-html</artifactId>
			<version>3.4</version>
		</dependency>
		<!-- The content of js.jar it's included into the Opend JDK under rhino.jar 
			otherwise, import dependencies anyway -->
		<dependency>
			<groupId>org.mozilla</groupId>
			<artifactId>rhino</artifactId>
			<version>1.7.7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.solr</groupId>
			<artifactId>solr-core</artifactId>
			<version>5.5.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-core</artifactId>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-util</artifactId>
			<version>8.5.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-catalina</artifactId>
			<version>8.5.4</version>
		</dependency>

		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>apache-jena-libs</artifactId>
			<type>pom</type>
			<version>3.0.1</version>
		</dependency>
		<!-- HttpClient and HttpCore dependencies added to avoid warning at mvn 
			dependency:analyze time -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.4.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
			<version>4.4.1</version>
		</dependency>

		<!-- Needed for Cassandra -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.13</version>
		</dependency>
		<!-- Needed at runtime -->
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>commons-digester</groupId>
			<artifactId>commons-digester</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>

		<!-- Tests -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.19</version>
		</dependency>

		<dependency>
			<groupId>org.xmlunit</groupId>
			<artifactId>xmlunit-core</artifactId>
			<version>2.1.1</version>
		</dependency>

		<!-- Tools.jar missing issue fix -->
		<dependency>
			<groupId>com.sun</groupId>
			<artifactId>tools</artifactId>
			<version>1.7.0</version>
			<scope>system</scope>
			<!-- If the java.home variable is not correctly set, change the -vm argument 
				in the eclipse.ini to point to the JDK -->
			<systemPath>${java.home}/../lib/tools.jar</systemPath>
		</dependency>

	</dependencies>

	<!-- Section to define properties like versions of Artifacts to be referenced 
		in the dependencies section (e.g. <mysqlVersion>(5.1,)</mysqlVersion>. <version>${mysqlVersion}</version> 
		) -->
	<properties />

	<build>

		<!-- defaultGoal defined in the parent POM -->

		<plugins>
			<!-- Enable all dependencies to be installed in Maven repo -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.5.2</version>
				<executions>
					<execution>
						<id>default-install</id>
						<phase>install</phase>
						<goals>
							<goal>install</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


</project>
