input {

  @ADDITIONAL_INPUTS@
	
	file {
		path => "/francelabs/datafari-stats.log"
		start_position => "beginning"
		sincedb_path => "/dev/null"
		type => "exploit"
		codec => multiline {
			patterns_dir => "./patterns"
			pattern => "%{STAT_LINE_START}"
			negate => "true"
			what => "previous"
			auto_flush_interval => 1
	    }
	}

	file {
		path => "/francelabs/datafari-monitoring.log"
		start_position => "beginning"
		sincedb_path => "/dev/null"
		type => "exploit"
		codec => multiline {
			patterns_dir => "./patterns"
			pattern => "%{STAT_LINE_START}"
			negate => "true"
			what => "previous"
			auto_flush_interval => 1
	    }
	}
	
}

filter {

	if [type] == "exploit" {

		grok {
			patterns_dir => "./patterns"
			match => { "message" => "%{LOG4J_TIMESTAMP:logDate} %{WORD:level}" }
		}
	
		if [level] == "STAT" {
			grok {
				match => { "message" => ".* - %{CUSTOM_DATA:id}\|%{CUSTOM_DATA:date}\|%{GREEDYDATA:query}\|%{NUMBER:noHits}\|%{NUMBER:numFound}\|%{NUMBER:numClicks}\|%{NUMBER:QTime}\|%{NUMBER:positionClickTot}?\|%{NUMBER:clicked}\|%{GREEDYDATA:history}\|%{GREEDYDATA:url}\|%{GREEDYDATA:username}" }
			}
	    
			# Convert fields & remove unused fields
			mutate {
				add_tag => ["stat"]
				convert => { "noHits" => "boolean" }
				convert => { "clicked" => "boolean" }
			}
			
			json {
        "source" => "history"
        "target" => "history"
      }
		}
	
		if [level] == "MONITORING" {
			grok {
				match => { "message" => ".* - %{CUSTOM_DATA:id}\|%{CUSTOM_DATA:timestamp}\|%{INT:numDocs}\|%{CUSTOM_DATA:facet}\|%{GREEDYDATA:facetType}" }
			}
	
			mutate {
				add_tag => ["monitoring"]
			}
	
		}
		
		if [level] == "CRAWL" {
			grok {
				match => { "message" => ".* - %{CUSTOM_DATA:id}\|%{CUSTOM_DATA:connector}\|%{NUMBER:starttime}\|%{NUMBER:endtime}\|%{NUMBER:datasize}\|%{CUSTOM_DATA:activitytype}\|%{GREEDYDATA:entityid}\|%{CUSTOM_DATA:extension}\|%{CUSTOM_DATA:resultcode}\|%{GREEDYDATA:resultdesc}" }
			}
			  
			mutate {
				add_tag => ["crawl"]
			}
  	}
	
		# Remove unused fields
		mutate {
			remove_field => [ "logDate", "level" ]
		}
	
	}
	
	@ADDITIONAL_FILTERS@
	
	# Remove unused fields
	mutate {
		remove_field => [ "day", "month", "year", "@timestamp", "message", "@version" ]
	}
	
	# ignore parse failure
	if "_grokparsefailure" in [tags] {
  		drop { }
	}
}


output {

	# Send directly to local Elasticsearch
	if [type] == "exploit" {
		if "stat" in [tags] {
			elasticsearch {
				hosts => ["@ES_HOST@"]
				ssl => true
				ssl_certificate_verification => false
				index => "statistics"
				document_id => "%{id}"
				template => "./templates/datafari-statistic-template.json"
				template_name => "datafari-statistics"
				template_overwrite => false
				user => admin
				password => admin
				user => admin
        password => admin
        ilm_enabled => false
			}
		}
	
		if "monitoring" in [tags] {
			elasticsearch {
				hosts => ["@ES_HOST@"]
				ssl => true
				ssl_certificate_verification => false
				index => "monitoring"
				document_id => "%{id}"
				template => "./templates/datafari-monitoring-template.json"
				template_name => "datafari-monitoring"
				template_overwrite => false
				user => admin
        password => admin
        ilm_enabled => false     
			}
		}
		
		@ADDITIONAL_EXPLOITS@
	}

  @ADDITIONAL_OUTPUTS@
}
