input {
	
	file {
		path => "/francelabs/datafari-stats.log"
		start_position => "beginning"
		sincedb_path => "/dev/null"
		type => "exploit"
	}

	file {
		path => "/francelabs/datafari-monitoring.log"
		start_position => "beginning"
		sincedb_path => "/dev/null"
		type => "exploit"
	}
}

filter {

	if [type] == "exploit" {

		grok {
			patterns_dir => "./patterns"
			match => { "message" => "%{LOG4J_TIMESTAMP:logDate} %{WORD:level}" }
		}
	
		if [level] == "STAT" {
			grok {
				match => { "message" => ".*.+?- %{GREEDYDATA:id}?\|%{GREEDYDATA:date}?\|%{GREEDYDATA:query}?\|%{NUMBER:noHits}?\|%{NUMBER:numFound}?\|%{NUMBER:numClicks}?\|%{NUMBER:QTime}?\|%{NUMBER:positionClickTot}?\|%{NUMBER:clicked}?\|%{GREEDYDATA:history}\|%{GREEDYDATA:url}\|%{GREEDYDATA:username}" }
			}
	    
			# Convert fields & remove unused fields
			mutate {
				add_tag => ["stat"]
				convert => { "noHits" => "boolean" }
				convert => { "clicked" => "boolean" }
			}
		}
	
		if [level] == "MONITORING" {
			grok {
				match => { "message" => ".*.+?- %{GREEDYDATA:id}\|%{GREEDYDATA:timestamp}\|%{INT:numDocs}\|%{GREEDYDATA:facet}\|%{GREEDYDATA:facetType}" }
			}
	
			mutate {
				add_tag => ["monitoring"]
			}
	
		}
	
		# Remove unused fields
		mutate {
			remove_field => [ "@timestamp", "message", "logDate", "level", "host", "path", "@version" ]
		}
	
	}
}


output {

	# Send directly to local Elasticsearch
	if [type] == "exploit" {
		if "stat" in [tags] {
			elasticsearch {
				hosts => ["localhost:9200"]
				index => "statistics"
				document_id => "%{id}"
				template => "./templates/datafari-statistic-template.json"
				template_name => "datafari-statistics"
				template_overwrite => true
				flush_size => 100
				idle_flush_time => 1
			}
		}
	
		if "monitoring" in [tags] {
			elasticsearch {
				hosts => ["localhost:9200"]
				index => "monitoring"
				document_id => "%{id}"
				template => "./templates/datafari-monitoring-template.json"
				template_name => "datafari-monitoring"
				template_overwrite => true
				flush_size => 100
				idle_flush_time => 1      
			}
		}
	}
}
