<?xml version="1.0" encoding="UTF-8" ?>
<project name="maven-ant-tasks" default="all" basedir=".">

	<!-- Here we specify all the Ant tasks executed by Maven build -->

	<target name="all" depends="clean-all,setup-solr,setup-jena,setup-cassandra,setup-mcf,setup-elk,misc,clean-temp" />

	<target name="misc">
		<!-- Create PID directory, at the root of datafari project -->
		<mkdir dir="pid" />
		<!-- Affect enough privileges for this folder -->
		<chmod dir="pid" perm="777" />

		<!-- Copy Manifold CF to Tomcat auto-deploy directory -->
		<copy toDir="tomcat/webapps" overwrite="true" force="true">
			<fileset dir="mcf/war" />
			<globmapper from="*.war" to="datafari-*.war" />
		</copy>

		<!-- Copy Tomcat config files, that may change if dev env under Eclipse -->
		<copy toDir="tomcat/conf" overwrite="true" force="true">
			<fileset dir="datafari-tomcat/conf" />
		</copy>

		<!-- Copy Log4j.properties file, needed to use log4j instead of common logging (logging.properties in tomcat/conf) -->
		<copy file="tomcat/conf/log4j.properties" toDir="tomcat/lib" overwrite="true" force="true" />

		<!-- Copy files needed for installed Datafari -->
		<copy todir="bin/common/config/cassandra" overwrite="true" force="true">
			<fileset dir="datafari-cassandra/conf/dev-env" />
		</copy>
	</target>

	<target name="setup-solr">
		<!-- Copy only useful Solr server directories stripping the parent Solr 
			directory (to avoid Solr version inclusion) -->
		<copy toDir="solr" overwrite="true" force="true">
			<fileset dir="temp" includes="*solr*/bin/**,*solr*/server/**" />
			<cutdirsmapper dirs="1" />
		</copy>

		<!-- Copy contrib Jars to solr_home/FileShare/lib/FEATURE_DIR_NAME directory -->
		<copy toDir="solr/solr_home/FileShare/lib" overwrite="true" force="true">
			<!-- Copy Jars that are inside contrib directory -->
			<!-- Copy Extraction and LangId -->
			<fileset dir="temp">
				<include name="*solr*/contrib/extraction/**/*.jar" />
				<include name="*solr*/contrib/langid/**/*.jar" />
			</fileset>
			<chainedmapper>
				<!-- Strip solr*/contrib directory -->
				<cutdirsmapper dirs="2" />
				<filtermapper>
					<!-- Strip lib directory under each group of Jars-->
					<replacestring from="lib" to="" />
				</filtermapper>
			</chainedmapper>
		</copy>

		<!-- Copy Solr dist Jars to solr_home/FileShare/lib/solr directory -->
		<copy toDir="solr/solr_home/FileShare/lib/solr" overwrite="true" force="true">
			<!-- Copy Jars that are inside dist directory -->
			<!-- Copy only Jars that we need -->
			<fileset dir="temp" includes="*solr*/dist/solr-langid-*.jar" />
			<chainedmapper>
				<!-- Strip solr*/dist directory -->
				<cutdirsmapper dirs="2" />
			</chainedmapper>
		</copy>

		<!-- Overwrite with Datafari specific scripts and copy conf and solr_home directories -->
		<!-- Use Datafari specific Tika-Parser JAR, should be removed with issue https://datafari.atlassian.net/browse/DATAFARI-80 -->
		<delete>
			<fileset dir="solr/solr_home/FileShare/lib/extraction" includes="*tika-parsers*.jar" />
		</delete>
		<copy toDir="solr" overwrite="true" force="true">
			<fileset dir="datafari-solr" />
		</copy>

		<!-- Affect enough privileges for Solr executables (Ant copy doesn't preserve 
			execution rights!) -->
		<!-- All files under solr/bin at any level must have 775 permissions -->
		<chmod dir="solr/bin" perm="775" includes="**" />
		<!-- Only .sh files at any level under solr/server/scripts -->
		<chmod dir="solr/server/scripts" perm="775" includes="**/*.sh" />
	</target>

	<target name="setup-cassandra">
		<!-- Copy only useful Cassandra directories stripping the parent Cassandra 
			directory (to avoid Cassandra version inclusion) -->
		<copy toDir="cassandra" overwrite="true" force="true">
			<fileset dir="temp">
				<include name="*cassandra*/bin/**" />
				<include name="*cassandra*/conf/**" />
				<include name="*cassandra*/interface/**" />
				<include name="*cassandra*/lib/**" />
				<include name="*cassandra*/pylib/**" />
				<include name="*cassandra*/tools/**" />
			</fileset>
			<cutdirsmapper dirs="1" />
		</copy>

		<!-- Overwrite with Datafari specific scripts and copy conf directory-->
		<copy toDir="cassandra" overwrite="true" force="true">
			<fileset dir="datafari-cassandra">
				<!-- Exclude files used for dev-environment -->
				<exclude name="**/dev-env/**" />
			</fileset>
		</copy>

		<!-- Affect enough privileges for Cassandra executables (Ant copy doesn't 
			preserve execution rights!) -->
		<!-- All files under cassandra/bin at any level must have 775 permissions -->
		<chmod dir="cassandra/bin" perm="775" includes="**" />
		<!-- All files under cassandra/tools/bin at any level must have 775 permissions -->
		<chmod dir="cassandra/tools/bin" perm="775" includes="**" />
	</target>

	<target name="setup-mcf">
		<!-- Copy only useful ManifoldCF directories and files stripping the parent MCF 
			directory (to avoid MCF version inclusion) -->
		<copy toDir="mcf/mcf_home" overwrite="true" force="true">
			<fileset dir="temp">
				<include name="*manifoldcf*/connector-common-lib/**" />
				<include name="*manifoldcf*/connector-lib/**" />
				<include name="*manifoldcf*/connector-lib-proprietary/**" />
				<include name="*manifoldcf*/lib/**" />
				<include name="*manifoldcf*/connectors.xml" />
			</fileset>
			<cutdirsmapper dirs="1" />
		</copy>

		<!-- Copy war directory stripping the parent MCF 
			directory (to avoid MCF version inclusion) and web directory -->
		<copy toDir="mcf" overwrite="true" force="true">
			<fileset dir="temp">
				<include name="*manifoldcf*/**/mcf-api-service.war" />
				<include name="*manifoldcf*/**/mcf-authority-service.war" />
				<include name="*manifoldcf*/**/mcf-crawler-ui.war" />
			</fileset>
			<cutdirsmapper dirs="2" />
		</copy>

		<!-- Copy bin and mcf_home directories -->
		<copy toDir="mcf" overwrite="true" force="true">
			<fileset dir="datafari-mcf" includes="bin/**,mcf_home/**" />
		</copy>

		<!-- Affect enough privileges for MCF executables (Ant copy doesn't 
			preserve execution rights!) -->
		<!-- All files under mcf/bin at any level must have 775 permissions -->
		<chmod dir="mcf/bin" perm="775" includes="**" />

		<!-- All bash files under mcf/mcf_home must have 775 permissions -->
		<chmod dir="mcf/mcf_home" perm="775" includes="*.sh" />

		<!-- Create syncharea directory, otherwise we get an exception while running bash initialize-dev.sh -->
		<mkdir dir="mcf/mcf_home/syncharea" />

	</target>

	<!-- Right now we use ELK (Elasticsearch - Logstash - Kibana stack) only for Debian distribution of Datafari -->
	<target name="setup-elk">

		<!-- *** Setup Elasticsearch *** -->

		<!-- Copy Elasticsearch directories and files stripping the parent Elasticsearch 
				directory (to avoid Elasticsearch version inclusion) -->
		<copy toDir="debian7/elk/elasticsearch" overwrite="true" force="true">
			<fileset dir="temp">
				<include name="*elasticsearch*/**" />
			</fileset>
			<cutdirsmapper dirs="1" />
		</copy>

		<!-- Copy data directory -->
		<copy toDir="debian7/elk/elasticsearch" overwrite="true" force="true">
			<fileset dir="datafari-elk/elasticsearch" />
		</copy>

		<!-- Affect enough privileges for Elasticsearch executables (Ant copy doesn't 
				preserve execution rights!) -->
		<!-- All files under elasticsearch at any level must have 775 permissions -->
		<!-- Not needed <chmod dir="debian7/elk/elasticsearch" perm="775" includes="**" /> -->

		<!-- *** Setup Kibana *** -->

		<!-- We unzip and untar Kibana here instead of Maven's plugin Wget (like done for the other components)
		 as it doesn't handle correctly duplicated directory names in the path: e.g. A/B/C/B/D -->
		<gunzip>
			<fileset dir="temp">
				<include name="*kibana*.tar.gz" />
			</fileset>
		</gunzip>

		<untar dest="debian7/elk/kibana">
			<fileset dir="temp">
				<include name="*kibana*.tar" />
			</fileset>
			<cutdirsmapper dirs="1" />
		</untar>

		<!-- Affect enough privileges for Kibana executables (Ant copy doesn't 
						preserve execution rights!) -->
		<!-- All files under kibana at any level must have 775 permissions -->
		<!-- Not needed <chmod dir="debian7/elk/kibana" perm="775" includes="**" /> -->

		<!-- *** Setup Logstash *** -->

		<!-- We unzip and untar Logstash here instead of Maven's plugin Wget (like done for the other components)
				 as it doesn't handle correctly duplicated directory names in the path: e.g. A/B/C/B/D -->
		<gunzip>
			<fileset dir="temp">
				<include name="*logstash*.tar.gz" />
			</fileset>
		</gunzip>

		<untar dest="debian7/elk/logstash">
			<fileset dir="temp">
				<include name="*logstash*.tar" />
			</fileset>
			<cutdirsmapper dirs="1" />
		</untar>

		<!-- Copy Datafari-specific directories and files -->
		<copy toDir="debian7/elk/logstash" overwrite="true" force="true">
			<fileset dir="datafari-elk/logstash" />
		</copy>

		<!-- Affect enough privileges for Logstash executables (Ant copy doesn't 
								preserve execution rights!) -->
		<!-- All files under logstash at any level must have 775 permissions -->
		<!-- Not needed <chmod dir="debian7/elk/logstash" perm="775" includes="**" /> -->

	</target>

	<!-- *** Setup Jena *** -->

	<target name="setup-jena">
		<!-- Create jena directory in Solr FileShare core directory -->
		<!-- <mkdir dir="solr/solr_home/FileShare/lib/jena" /> -->

		<!-- Copy only useful Jena libraries to Solr FileShare core directory -->
		<copy toDir="solr/solr_home/FileShare/lib/jena" overwrite="true" force="true">
			<fileset dir="temp">
				<include name="*apache-jena*/lib/jena*" />
				<include name="*apache-jena*/lib/jackson*" />
				<include name="*apache-jena*/lib/commons-cli*" />
				<include name="*apache-jena*/lib/commons-csv*" />
				<include name="*apache-jena*/lib/dexx-collections*" />
				<include name="*apache-jena*/lib/jsonld*" />
				<include name="*apache-jena*/lib/libthrift*" />
			</fileset>
			<cutdirsmapper dirs="2" />
		</copy>
	</target>

	<target name="clean-temp">
		<!-- Delete the directory used for storing downloaded resources -->
		<delete dir="temp" />
	</target>

	<target name="clean-all">
		<delete dir="cassandra" />
		<delete dir="dist" />
		<delete dir="mcf" />
		<delete dir="solr" />
		<delete dir="debian7/elk" />
	</target>

</project>
