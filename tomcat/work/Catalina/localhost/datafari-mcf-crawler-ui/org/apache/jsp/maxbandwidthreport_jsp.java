/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.40
 * Generated at: 2015-05-19 14:28:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.apache.manifoldcf.core.interfaces.*;
import org.apache.manifoldcf.core.util.*;
import org.apache.manifoldcf.ui.i18n.*;
import org.apache.manifoldcf.agents.interfaces.*;
import org.apache.manifoldcf.crawler.interfaces.*;
import org.apache.manifoldcf.authorities.interfaces.*;
import java.util.*;

public final class maxbandwidthreport_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("/WEB-INF/jsp/fmt.tld", Long.valueOf(1428407612000L));
    _jspx_dependants.put("/WEB-INF/jsp/x.tld", Long.valueOf(1428407612000L));
    _jspx_dependants.put("/adminHeaders.jsp", Long.valueOf(1428407612000L));
    _jspx_dependants.put("/WEB-INF/jsp/c.tld", Long.valueOf(1428407612000L));
    _jspx_dependants.put("/WEB-INF/jsp/sql.tld", Long.valueOf(1428407612000L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 response.setHeader("Pragma","No-cache");
response.setDateHeader("Expires",0);
response.setHeader("Cache-Control", "no-cache");
response.setDateHeader("max-age", 0);
response.setContentType("text/html;charset=utf-8");

      out.write("\r\n");
      out.write("\r\n");


/* $Id: adminHeaders.jsp 1601529 2014-06-09 23:19:08Z kwright $ */

/**
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements. See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the "License"); you may not use this file except in compliance with
* the License. You may obtain a copy of the License at
* 
* http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.manifoldcf.ui.beans.ThreadContext thread = null;
      thread = (org.apache.manifoldcf.ui.beans.ThreadContext) _jspx_page_context.getAttribute("thread", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (thread == null){
        thread = new org.apache.manifoldcf.ui.beans.ThreadContext();
        _jspx_page_context.setAttribute("thread", thread, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      org.apache.manifoldcf.ui.beans.AdminProfile adminprofile = null;
      synchronized (session) {
        adminprofile = (org.apache.manifoldcf.ui.beans.AdminProfile) _jspx_page_context.getAttribute("adminprofile", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (adminprofile == null){
          adminprofile = new org.apache.manifoldcf.ui.beans.AdminProfile();
          _jspx_page_context.setAttribute("adminprofile", adminprofile, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	if (adminprofile.getLoggedOn() == false)
	{
		response.sendRedirect("login.jsp");
		return;
	}

	IThreadContext threadContext = thread.getThreadContext();
	org.apache.manifoldcf.ui.multipart.MultipartWrapper variableContext = (org.apache.manifoldcf.ui.multipart.MultipartWrapper)threadContext.get("__WRAPPER__");
	if (variableContext == null)
	{
		variableContext = new org.apache.manifoldcf.ui.multipart.MultipartWrapper(request,adminprofile);
		threadContext.save("__WRAPPER__",variableContext);
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");


/* $Id: maxbandwidthreport.jsp 1601529 2014-06-09 23:19:08Z kwright $ */

/**
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements. See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the "License"); you may not use this file except in compliance with
* the License. You may obtain a copy of the License at
* 
* http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
boolean maintenanceUnderway = org.apache.manifoldcf.crawler.system.ManifoldCF.checkMaintenanceUnderway();


      out.write("\r\n");
      out.write("\r\n");
      out.write("<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/>\r\n");
      out.write("\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("\t<link rel=\"StyleSheet\" href=\"style.css\" type=\"text/css\" media=\"screen\"/>\r\n");
      out.write("\t<title>\r\n");
      out.write("\t\t");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.ApacheManifoldCFMaximumBandwidthReport"));
      out.write("\r\n");
      out.write("\t</title>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t<!--\r\n");
      out.write("\r\n");
      out.write("\tfunction Go()\r\n");
      out.write("\t{\r\n");
      out.write("\t\tif (!isInteger(report.rowcount.value))\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\talert(\"");
      out.print(Messages.getBodyJavascriptString(pageContext.getRequest().getLocale(),"maxbandwidthreport.EnterALegalNumberForRowsPerPage"));
      out.write("\");\r\n");
      out.write("\t\t\treport.rowcount.focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (!isInteger(report.reportinterval.value))\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\talert(\"");
      out.print(Messages.getBodyJavascriptString(pageContext.getRequest().getLocale(),"maxbandwidthreport.EnterALegalIntervalSizeInMinutes"));
      out.write("\");\r\n");
      out.write("\t\t\treport.reportinterval.focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (report.reportbucketdesc.value == \"\")\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\talert(\"");
      out.print(Messages.getBodyJavascriptString(pageContext.getRequest().getLocale(),"maxbandwidthreport.IdentifierClassDescriptionCannotBeEmpty"));
      out.write("\");\r\n");
      out.write("\t\t\treport.reportbucketdesc.focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (!isRegularExpression(report.reportbucketdesc.value))\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\talert(\"");
      out.print(Messages.getBodyJavascriptString(pageContext.getRequest().getLocale(),"maxbandwidthreport.IdentifierClassDescriptionMustBeAValidRegularExpression"));
      out.write("\");\r\n");
      out.write("\t\t\treport.reportbucketdesc.focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (report.reportbucketdesc.value.indexOf(\"(\") == -1 || report.reportbucketdesc.value.indexOf(\")\") == -1)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\talert(\"");
      out.print(Messages.getBodyJavascriptString(pageContext.getRequest().getLocale(),"maxbandwidthreport.IdentifierClassDescriptionMustDelimitAClassWithParentheses"));
      out.write("\");\r\n");
      out.write("\t\t\treport.reportbucketdesc.focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (!isRegularExpression(report.reportentitymatch.value))\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\talert(\"");
      out.print(Messages.getBodyJavascriptString(pageContext.getRequest().getLocale(),"maxbandwidthreport.EntityMatchMustBeAValidRegularExpression"));
      out.write("\");\r\n");
      out.write("\t\t\treport.reportentitymatch.focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (!isRegularExpression(report.reportresultcodematch.value))\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\talert(\"");
      out.print(Messages.getBodyJavascriptString(pageContext.getRequest().getLocale(),"maxbandwidthreport.ResultCodeMatchMustBeAValidRegularExpression"));
      out.write("\");\r\n");
      out.write("\t\t\treport.reportresultcodematch.focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tdocument.report.op.value=\"Report\";\r\n");
      out.write("\t\tdocument.report.action = document.report.action + \"#MainButton\";\r\n");
      out.write("\t\tdocument.report.submit();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction Continue()\r\n");
      out.write("\t{\r\n");
      out.write("\t\tif (!isRegularExpression(report.reportentitymatch.value))\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\talert(\"");
      out.print(Messages.getBodyJavascriptString(pageContext.getRequest().getLocale(),"maxbandwidthreport.EntityMatchMustBeAValidRegularExpression"));
      out.write("\");\r\n");
      out.write("\t\t\treport.reportentitymatch.focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (!isRegularExpression(report.reportresultcodematch.value))\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\talert(\"");
      out.print(Messages.getBodyJavascriptString(pageContext.getRequest().getLocale(),"maxbandwidthreport.ResultCodeMatchMustBeAValidRegularExpression"));
      out.write("\");\r\n");
      out.write("\t\t\treport.reportresultcodematch.focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (!isRegularExpression(report.reportbucketdesc.value))\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\talert(\"");
      out.print(Messages.getBodyJavascriptString(pageContext.getRequest().getLocale(),"maxbandwidthreport.IdentifierClassDescriptionMustBeAValidRegularExpression"));
      out.write("\");\r\n");
      out.write("\t\t\treport.reportbucketdesc.focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (report.reportbucketdesc.value.indexOf(\"(\") == -1 || report.reportbucketdesc.value.indexOf(\")\") == -1)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\talert(\"");
      out.print(Messages.getBodyJavascriptString(pageContext.getRequest().getLocale(),"maxbandwidthreport.IdentifierClassDescriptionMustDelimitAClassWithParentheses"));
      out.write("\");\r\n");
      out.write("\t\t\treport.reportbucketdesc.focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tdocument.report.op.value=\"Continue\";\r\n");
      out.write("\t\tdocument.report.action = document.report.action + \"#MainButton\";\r\n");
      out.write("\t\tdocument.report.submit();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction ColumnClick(colname)\r\n");
      out.write("\t{\r\n");
      out.write("\t\tdocument.report.clickcolumn.value = colname;\r\n");
      out.write("\t\tGo();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction SetPosition(amt)\r\n");
      out.write("\t{\r\n");
      out.write("\t\tif (amt < 0)\r\n");
      out.write("\t\t\tamt = 0;\r\n");
      out.write("\t\tdocument.report.startrow.value = amt;\r\n");
      out.write("\t\tGo();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction isRegularExpression(value)\r\n");
      out.write("\t{\r\n");
      out.write("\t\ttry\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tvar foo = \"teststring\";\r\n");
      out.write("                        foo.search(value.replace(/\\(\\?i\\)/,\"\"));\r\n");
      out.write("\t\t\treturn true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tcatch (e)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction isInteger(value)\r\n");
      out.write("\t{\r\n");
      out.write("\t\tvar anum=/(^\\d+$)/;\r\n");
      out.write("\t\treturn anum.test(value);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t//-->\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body class=\"standardbody\">\r\n");
      out.write("\r\n");
      out.write("    <table class=\"page\">\r\n");
      out.write("      <tr><td colspan=\"2\" class=\"banner\">");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "banner.jsp", out, true);
      out.write("</td></tr>\r\n");
      out.write("      <tr><td class=\"navigation\">");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "navigation.jsp", out, true);
      out.write("</td>\r\n");
      out.write("       <td class=\"window\">\r\n");
      out.write("\t<p class=\"windowtitle\">");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.MaximumBandwidthReport"));
      out.write("</p>\r\n");

if (maintenanceUnderway == false)
{
	int k;

	// Read the parameters.
	String reportConnection = variableContext.getParameter("reportconnection");
	if (reportConnection == null)
		reportConnection = "";
	String[] reportActivities;
	if (variableContext.getParameter("reportactivities_posted") != null)
	{
		reportActivities = variableContext.getParameterValues("reportactivities");
		if (reportActivities == null)
			reportActivities = new String[0];
	}
	else
		reportActivities = null;

	// Get the current time, so we can fill in default values where possible.
	long currentTime = System.currentTimeMillis();

	Long startTime = null;
	Long endTime = null;

	// Get start time, if selected
	String startYear = variableContext.getParameter("reportstartyear");
	String startMonth = variableContext.getParameter("reportstartmonth");
	String startDay = variableContext.getParameter("reportstartday");
	String startHour = variableContext.getParameter("reportstarthour");
	String startMinute = variableContext.getParameter("reportstartminute");

	// Get end time, if selected.
	String endYear = variableContext.getParameter("reportendyear");
	String endMonth = variableContext.getParameter("reportendmonth");
	String endDay = variableContext.getParameter("reportendday");
	String endHour = variableContext.getParameter("reportendhour");
	String endMinute = variableContext.getParameter("reportendminute");

	if (startYear == null && startMonth == null && startDay == null && startHour == null && startMinute == null &&
	    endYear == null && endMonth == null && endDay == null && endHour == null && endMinute == null)
	{
		// Nobody has selected a time range yet.  Pick the last hour.
		endTime = null;
		startTime = new Long(currentTime - 1000L * 60L * 60L);
	}
	else
	{
		// Get start time, if selected
		if (startYear == null)
			startYear = "";
		if (startMonth == null)
			startMonth = "";
		if (startDay == null)
			startDay = "";
		if (startHour == null)
			startHour = "";
		if (startMinute == null)
			startMinute = "";

		// Get end time, if selected.
		if (endYear == null)
			endYear = "";
		if (endMonth == null)
			endMonth = "";
		if (endDay == null)
			endDay = "";
		if (endHour == null)
			endHour = "";
		if (endMinute == null)
			endMinute = "";

		if (startYear.length() == 0 || startMonth.length() == 0 || startDay.length() == 0 || startHour.length() == 0 || startMinute.length() == 0)
		{
			// Undetermined start
			startTime = null;
		}
		else
		{
			// Convert the specified times to a long.
			Calendar c = new GregorianCalendar();
			c.set(Calendar.YEAR,Integer.parseInt(startYear));
			c.set(Calendar.MONTH,Integer.parseInt(startMonth));
			c.set(Calendar.DAY_OF_MONTH,Integer.parseInt(startDay) + 1);
			c.set(Calendar.HOUR_OF_DAY,Integer.parseInt(startHour));
			c.set(Calendar.MINUTE,Integer.parseInt(startMinute));
			startTime = new Long(c.getTimeInMillis());
		}
		if (endYear.length() == 0 || endMonth.length() == 0 || endDay.length() == 0 || endHour.length() == 0 || endMinute.length() == 0)
		{
			// Undetermined end
			endTime = null;
		}
		else
		{
			// Convert the specified times to a long.
			Calendar c = new GregorianCalendar();
			c.set(Calendar.YEAR,Integer.parseInt(endYear));
			c.set(Calendar.MONTH,Integer.parseInt(endMonth));
			c.set(Calendar.DAY_OF_MONTH,Integer.parseInt(endDay) + 1);
			c.set(Calendar.HOUR_OF_DAY,Integer.parseInt(endHour));
			c.set(Calendar.MINUTE,Integer.parseInt(endMinute));
			endTime = new Long(c.getTimeInMillis());
		}
	}

	// Now, turn the startTime and endTime back into fielded values.  The values will be blank where there is no limit.
	if (startTime == null)
	{
		startYear = "";
		startMonth = "";
		startDay = "";
		startHour = "";
		startMinute = "";
	}
	else
	{
		// Do the conversion
		Calendar c = new GregorianCalendar();
		c.setTimeInMillis(startTime.longValue());
		startYear = Integer.toString(c.get(Calendar.YEAR));
		startMonth = Integer.toString(c.get(Calendar.MONTH));
		startDay = Integer.toString(c.get(Calendar.DAY_OF_MONTH)-1);
		startHour = Integer.toString(c.get(Calendar.HOUR_OF_DAY));
		startMinute = Integer.toString(c.get(Calendar.MINUTE));
	}

	if (endTime == null)
	{
		endYear = "";
		endMonth = "";
		endDay = "";
		endHour = "";
		endMinute = "";

	}
	else
	{
		// Do the conversion
		Calendar c = new GregorianCalendar();
		c.setTimeInMillis(endTime.longValue());
		endYear = Integer.toString(c.get(Calendar.YEAR));
		endMonth = Integer.toString(c.get(Calendar.MONTH));
		endDay = Integer.toString(c.get(Calendar.DAY_OF_MONTH)-1);
		endHour = Integer.toString(c.get(Calendar.HOUR_OF_DAY));
		endMinute = Integer.toString(c.get(Calendar.MINUTE));
	}

	// Get the entity match string.
	String entityMatch = variableContext.getParameter("reportentitymatch");
	if (entityMatch == null)
		entityMatch = "";

	// Get the resultcode match string.
	String resultCodeMatch = variableContext.getParameter("reportresultcodematch");
	if (resultCodeMatch == null)
		resultCodeMatch = "";

	String reportBucketDesc = variableContext.getParameter("reportbucketdesc");
	if (reportBucketDesc == null)
		reportBucketDesc = "(.*)";
	String intervalString = variableContext.getParameter("reportinterval");
	int interval = 5;
	if (intervalString != null && intervalString.length() > 0)
		interval = Integer.parseInt(intervalString);
	long intervalMilliseconds = ((long)interval) * 60L * 1000L;

	// Read the other data we need.
	IRepositoryConnectionManager connMgr = RepositoryConnectionManagerFactory.make(threadContext);
	IRepositoryConnection[] connList = connMgr.getAllConnections();

	// Query the legal list of activities.  This will depend on the connection has been chosen, if any.
	Map selectedActivities = null;
	String[] activityList = null;
	if (reportConnection.length() > 0)
	{
		activityList = org.apache.manifoldcf.crawler.system.ManifoldCF.getActivitiesList(threadContext,reportConnection);
		if (activityList == null)
			reportConnection = "";
		else
		{
			selectedActivities = new HashMap();
			String[] activitiesToNote;
			int j = 0;
			if (reportActivities == null)
				activitiesToNote = activityList;
			else
				activitiesToNote = reportActivities;

			while (j < activitiesToNote.length)
			{
				String activity = activitiesToNote[j++];
				selectedActivities.put(activity,activity);
			}
		}
	}


      out.write("\r\n");
      out.write("\t<form class=\"standardform\" name=\"report\" action=\"execute.jsp\" method=\"POST\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"op\" value=\"Continue\"/>\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"type\" value=\"maxbandwidthreport\"/>\r\n");
      out.write("\t\t<table class=\"displaytable\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td class=\"separator\" colspan=\"4\"><hr/></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td class=\"description\" colspan=\"1\">");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.Connection"));
      out.write("</td><td class=\"value\" colspan=\"1\">\r\n");
      out.write("\t\t\t\t\t<select name=\"reportconnection\" size=\"3\">\r\n");
      out.write("\t\t\t\t\t\t<option ");
      out.print((reportConnection.length()==0)?"selected=\"selected\"":"");
      out.write(" value=\"\">-- ");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.NotSpecified"));
      out.write(" --</option>\r\n");

	int i = 0;
	while (i < connList.length)
	{
		IRepositoryConnection conn = connList[i++];
		String thisConnectionName = conn.getName();
		String thisDescription = conn.getDescription();
		if (thisDescription == null || thisDescription.length() == 0)
			thisDescription = thisConnectionName;

      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option ");
      out.print((thisConnectionName.equals(reportConnection))?"selected=\"selected\"":"");
      out.write(" value='");
      out.print(org.apache.manifoldcf.ui.util.Encoder.attributeEscape(thisConnectionName));
      out.write('\'');
      out.write('>');
      out.print(org.apache.manifoldcf.ui.util.Encoder.bodyEscape(thisDescription));
      out.write("</option>\r\n");

	}

      out.write("\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t</td>\r\n");

	if (reportConnection.length() > 0)
	{

      out.write("\r\n");
      out.write("\t\t\t\t<td class=\"description\" colspan=\"1\">");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.Activities"));
      out.write("</td><td class=\"value\" colspan=\"1\">\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" name=\"reportactivities_posted\" value=\"true\"/>\r\n");
      out.write("\t\t\t\t\t<select multiple=\"true\" name=\"reportactivities\" size=\"3\">\r\n");

	    i = 0;
	    while (i < activityList.length)
	    {
		String activity = activityList[i++];

      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option ");
      out.print(((selectedActivities.get(activity)==null)?"":"selected=\"selected\""));
      out.write(" value='");
      out.print(org.apache.manifoldcf.ui.util.Encoder.attributeEscape(activity));
      out.write('\'');
      out.write('>');
      out.print(org.apache.manifoldcf.ui.util.Encoder.bodyEscape(activity));
      out.write("</option>\r\n");

	    }

      out.write("\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t</td>\r\n");

	}
	else
	{

      out.write("\r\n");
      out.write("\t\t\t\t<td class=\"value\" colspan=\"2\"></td>\r\n");

	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td class=\"separator\" colspan=\"4\"><hr/></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td class=\"description\">");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.StartTime"));
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td class=\"value\" colspan=\"3\">\r\n");
      out.write("\t\t\t\t    <select class=\"schedulepulldown\" name='reportstarthour' size=\"3\">\r\n");
      out.write("\t\t\t\t\t<option value=\"\" ");
      out.print((startHour.length()==0)?"selected=\"selected\"":"");
      out.write(">-- ");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.NotSpecified"));
      out.write(" --</option>\r\n");

					k = 0;
					while (k < 24)
					{
						int q = k;
						String ampm;
						if (k < 12)
							ampm = "am";
						else
						{
							ampm = "pm";
							q -= 12;
						}
						String hour;
						if (q == 0)
							q = 12;

      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value='");
      out.print(k);
      out.write('\'');
      out.write(' ');
      out.print((startHour.equals(Integer.toString(k)))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Integer.toString(q)+" "+ampm);
      out.write("</option>\r\n");
						
						k++;
					}

      out.write("\r\n");
      out.write("\t\t\t\t    </select><nobr/>:<nobr/> \r\n");
      out.write("\t\t\t\t    <select class=\"schedulepulldown\" name='reportstartminute' size=\"3\">\r\n");
      out.write("\t\t\t\t\t<option value=\"\" ");
      out.print((startMinute.length()==0)?"selected=\"selected\"":"");
      out.write(">-- ");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.NotSpecified"));
      out.write(" --</option>\r\n");

					k = 0;
					while (k < 60)
					{

      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value='");
      out.print(k);
      out.write('\'');
      out.write(' ');
      out.print((startMinute.equals(Integer.toString(k)))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Integer.toString(k));
      out.write("</option>\r\n");

						k++;
					}

      out.write("\r\n");
      out.write("\t\t\t\t    </select> ");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.on"));
      out.write(" \r\n");
      out.write("\t\t\t\t    <select class=\"schedulepulldown\" name='reportstartmonth' size=\"3\">\r\n");
      out.write("\t\t\t\t\t<option value=\"\" ");
      out.print((startMonth.length()==0)?"selected=\"selected\"":"");
      out.write(">-- ");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.NotSpecified"));
      out.write(" --</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"0\" ");
      out.print((startMonth.equals("0"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.January"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"1\" ");
      out.print((startMonth.equals("1"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.February"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2\" ");
      out.print((startMonth.equals("2"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.March"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"3\" ");
      out.print((startMonth.equals("3"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.April"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"4\" ");
      out.print((startMonth.equals("4"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.May"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"5\" ");
      out.print((startMonth.equals("5"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.June"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"6\" ");
      out.print((startMonth.equals("6"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.July"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"7\" ");
      out.print((startMonth.equals("7"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.August"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"8\" ");
      out.print((startMonth.equals("8"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.September"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"9\" ");
      out.print((startMonth.equals("9"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.October"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"10\" ");
      out.print((startMonth.equals("10"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.November"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"11\" ");
      out.print((startMonth.equals("11"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.December"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t    </select><nobr/>\r\n");
      out.write("\t\t\t\t    <select class=\"schedulepulldown\" name='reportstartday' size=\"3\">\r\n");
      out.write("\t\t\t\t\t<option value=\"\" ");
      out.print((startDay.length()==0)?"selected=\"selected\"":"");
      out.write(">-- ");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.NotSpecified"));
      out.write(" --</option>\r\n");

					k = 0;
					while (k < 31)
					{
						int value = (k+1) % 10;
						String suffix;
						if (value == 1 && k != 10)
							suffix = "st";
						else if (value == 2 && k != 11)
							suffix = "nd";
						else if (value == 3 && k != 12)
							suffix = "rd";
						else
							suffix = "th";

      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value='");
      out.print(Integer.toString(k));
      out.write('\'');
      out.write(' ');
      out.print((startDay.equals(Integer.toString(k)))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Integer.toString(k+1)+suffix);
      out.write("</option>\r\n");

						k++;
					}

      out.write("\r\n");
      out.write("\t\t\t\t    </select><nobr/>,<nobr/>\r\n");
      out.write("\t\t\t\t    <select class=\"schedulepulldown\" name='reportstartyear' size=\"3\">\r\n");
      out.write("\t\t\t\t\t<option value=\"\" ");
      out.print((startYear.length()==0)?"selected=\"selected\"":"");
      out.write(">-- ");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.NotSpecified"));
      out.write(" --</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2005\" ");
      out.print((startYear.equals("2005"))?"selected=\"selected\"":"");
      out.write(">2005</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2006\" ");
      out.print((startYear.equals("2006"))?"selected=\"selected\"":"");
      out.write(">2006</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2007\" ");
      out.print((startYear.equals("2007"))?"selected=\"selected\"":"");
      out.write(">2007</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2008\" ");
      out.print((startYear.equals("2008"))?"selected=\"selected\"":"");
      out.write(">2008</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2009\" ");
      out.print((startYear.equals("2009"))?"selected=\"selected\"":"");
      out.write(">2009</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2010\" ");
      out.print((startYear.equals("2010"))?"selected=\"selected\"":"");
      out.write(">2010</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2011\" ");
      out.print((startYear.equals("2011"))?"selected=\"selected\"":"");
      out.write(">2011</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2012\" ");
      out.print((startYear.equals("2012"))?"selected=\"selected\"":"");
      out.write(">2012</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2013\" ");
      out.print((startYear.equals("2013"))?"selected=\"selected\"":"");
      out.write(">2013</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2014\" ");
      out.print((startYear.equals("2014"))?"selected=\"selected\"":"");
      out.write(">2014</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2015\" ");
      out.print((startYear.equals("2015"))?"selected=\"selected\"":"");
      out.write(">2015</option>\r\n");
      out.write("\t\t\t\t    </select>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td class=\"description\">");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.EndTime"));
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td class=\"value\" colspan=\"3\">\r\n");
      out.write("\t\t\t\t    <select class=\"schedulepulldown\" name='reportendhour' size=\"3\">\r\n");
      out.write("\t\t\t\t\t<option value=\"\" ");
      out.print((endHour.length()==0)?"selected=\"selected\"":"");
      out.write(">-- ");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.NotSpecified"));
      out.write(" --</option>\r\n");

					k = 0;
					while (k < 24)
					{
						int q = k;
						String ampm;
						if (k < 12)
							ampm = "am";
						else
						{
							ampm = "pm";
							q -= 12;
						}
						String hour;
						if (q == 0)
							q = 12;

      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value='");
      out.print(k);
      out.write('\'');
      out.write(' ');
      out.print((endHour.equals(Integer.toString(k)))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Integer.toString(q)+" "+ampm);
      out.write("</option>\r\n");
						
						k++;
					}

      out.write("\r\n");
      out.write("\t\t\t\t    </select><nobr/>:<nobr/> \r\n");
      out.write("\t\t\t\t    <select class=\"schedulepulldown\" name='reportendminute' size=\"3\">\r\n");
      out.write("\t\t\t\t\t<option value=\"\" ");
      out.print((endMinute.length()==0)?"selected=\"selected\"":"");
      out.write(">-- ");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.NotSpecified"));
      out.write(" --</option>\r\n");

					k = 0;
					while (k < 60)
					{

      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value='");
      out.print(k);
      out.write('\'');
      out.write(' ');
      out.print((endMinute.equals(Integer.toString(k)))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Integer.toString(k));
      out.write("</option>\r\n");

						k++;
					}

      out.write("\r\n");
      out.write("\t\t\t\t    </select> ");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.on"));
      out.write(" \r\n");
      out.write("\t\t\t\t    <select class=\"schedulepulldown\" name='reportendmonth' size=\"3\">\r\n");
      out.write("\t\t\t\t\t<option value=\"\" ");
      out.print((endMonth.length()==0)?"selected=\"selected\"":"");
      out.write(">-- ");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.NotSpecified"));
      out.write(" --</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"0\" ");
      out.print((endMonth.equals("0"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.January"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"1\" ");
      out.print((endMonth.equals("1"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.February"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2\" ");
      out.print((endMonth.equals("2"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.March"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"3\" ");
      out.print((endMonth.equals("3"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.April"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"4\" ");
      out.print((endMonth.equals("4"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.May"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"5\" ");
      out.print((endMonth.equals("5"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.June"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"6\" ");
      out.print((endMonth.equals("6"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.July"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"7\" ");
      out.print((endMonth.equals("7"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.August"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"8\" ");
      out.print((endMonth.equals("8"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.September"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"9\" ");
      out.print((endMonth.equals("9"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.October"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"10\" ");
      out.print((endMonth.equals("10"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.November"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"11\" ");
      out.print((endMonth.equals("11"))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.December"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t    </select><nobr/>\r\n");
      out.write("\t\t\t\t    <select class=\"schedulepulldown\" name='reportendday' size=\"3\">\r\n");
      out.write("\t\t\t\t\t<option value=\"\" ");
      out.print((endDay.length()==0)?"selected=\"selected\"":"");
      out.write(">-- ");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.NotSpecified"));
      out.write(" --</option>\r\n");

					k = 0;
					while (k < 31)
					{
						int value = (k+1) % 10;
						String suffix;
						if (value == 1 && k != 10)
							suffix = "st";
						else if (value == 2 && k != 11)
							suffix = "nd";
						else if (value == 3 && k != 12)
							suffix = "rd";
						else
							suffix = "th";

      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value='");
      out.print(Integer.toString(k));
      out.write('\'');
      out.write(' ');
      out.print((endDay.equals(Integer.toString(k)))?"selected=\"selected\"":"");
      out.write('>');
      out.print(Integer.toString(k+1)+suffix);
      out.write("</option>\r\n");

						k++;
					}

      out.write("\r\n");
      out.write("\t\t\t\t    </select><nobr/>,<nobr/>\r\n");
      out.write("\t\t\t\t    <select class=\"schedulepulldown\" name='reportendyear' size=\"3\">\r\n");
      out.write("\t\t\t\t\t<option value=\"\" ");
      out.print((endYear.length()==0)?"selected=\"selected\"":"");
      out.write(">-- ");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.NotSpecified"));
      out.write(" --</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2005\" ");
      out.print((endYear.equals("2005"))?"selected=\"selected\"":"");
      out.write(">2005</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2006\" ");
      out.print((endYear.equals("2006"))?"selected=\"selected\"":"");
      out.write(">2006</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2007\" ");
      out.print((endYear.equals("2007"))?"selected=\"selected\"":"");
      out.write(">2007</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2008\" ");
      out.print((endYear.equals("2008"))?"selected=\"selected\"":"");
      out.write(">2008</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2009\" ");
      out.print((endYear.equals("2009"))?"selected=\"selected\"":"");
      out.write(">2009</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2010\" ");
      out.print((endYear.equals("2010"))?"selected=\"selected\"":"");
      out.write(">2010</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2011\" ");
      out.print((endYear.equals("2011"))?"selected=\"selected\"":"");
      out.write(">2011</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2012\" ");
      out.print((endYear.equals("2012"))?"selected=\"selected\"":"");
      out.write(">2012</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2013\" ");
      out.print((endYear.equals("2013"))?"selected=\"selected\"":"");
      out.write(">2013</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2014\" ");
      out.print((endYear.equals("2014"))?"selected=\"selected\"":"");
      out.write(">2014</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2015\" ");
      out.print((endYear.equals("2015"))?"selected=\"selected\"":"");
      out.write(">2015</option>\r\n");
      out.write("\t\t\t\t    </select>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td class=\"separator\" colspan=\"4\"><hr/></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td class=\"description\"><nobr>");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.EntityMatch"));
      out.write("</nobr></td>\r\n");
      out.write("\t\t\t\t<td class=\"value\"><input type=\"text\" name=\"reportentitymatch\" value='");
      out.print(org.apache.manifoldcf.ui.util.Encoder.attributeEscape(entityMatch));
      out.write("'/></td>\r\n");
      out.write("\t\t\t\t<td class=\"description\"><nobr>");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.ResultCodeMatch"));
      out.write("</nobr></td>\r\n");
      out.write("\t\t\t\t<td class=\"value\"><input type=\"text\" name=\"reportresultcodematch\" value='");
      out.print(org.apache.manifoldcf.ui.util.Encoder.attributeEscape(resultCodeMatch));
      out.write("'/></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td class=\"separator\" colspan=\"4\"><hr/></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td class=\"description\"><nobr>");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.IdentifierClassDescription"));
      out.write("</nobr></td>\r\n");
      out.write("\t\t\t\t<td class=\"value\"><input type=\"text\" name=\"reportbucketdesc\" size=\"20\" value='");
      out.print(org.apache.manifoldcf.ui.util.Encoder.attributeEscape(reportBucketDesc));
      out.write("'/></td>\r\n");
      out.write("\t\t\t\t<td class=\"description\"><nobr>");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.SlidingWindowSize"));
      out.write("</nobr></td>\r\n");
      out.write("\t\t\t\t<td class=\"value\"><input type=\"text\" name=\"reportinterval\" size=\"5\" value='");
      out.print(org.apache.manifoldcf.ui.util.Encoder.attributeEscape(Integer.toString(interval)));
      out.write("'/></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td class=\"separator\" colspan=\"4\"><hr/></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<td class=\"message\" colspan=\"4\">\r\n");

	if (reportConnection.length() > 0)
	{

      out.write("\r\n");
      out.write("\t\t\t\t\t<a name=\"MainButton\"><input type=\"button\" value=\"");
      out.print(Messages.getAttributeString(pageContext.getRequest().getLocale(),"maxbandwidthreport.Go"));
      out.write("\" onClick=\"javascript:Go()\" alt=\"");
      out.print(Messages.getAttributeString(pageContext.getRequest().getLocale(),"maxbandwidthreport.ExecuteThisQuery"));
      out.write("\"/></a>\r\n");

	}
	else
	{

      out.write("\r\n");
      out.write("\t\t\t\t\t<a name=\"MainButton\"><input type=\"button\" value=\"");
      out.print(Messages.getAttributeString(pageContext.getRequest().getLocale(),"maxbandwidthreport.Continue"));
      out.write("\" onClick=\"javascript:Continue()\" alt=\"");
      out.print(Messages.getAttributeString(pageContext.getRequest().getLocale(),"maxbandwidthreport.Continue"));
      out.write("\"/></a>\r\n");

	}

      out.write("\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td class=\"separator\" colspan=\"4\"><hr/></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t</table>\r\n");

	if (reportConnection.length() > 0)
	{
		// Run the report.

		// First, we need to gather the sort order object.
		String sortOrderString = variableContext.getParameter("sortorder");
		SortOrder sortOrder;
		if (sortOrderString == null || sortOrderString.length() == 0)
			sortOrder = new SortOrder();
		else
			sortOrder = new SortOrder(sortOrderString);

		// Now, gather the column header that was clicked on (if any)
		String clickedColumn = variableContext.getParameter("clickcolumn");
		if (clickedColumn != null && clickedColumn.length() > 0)
			sortOrder.clickColumn(clickedColumn);

		// Gather the start
		String startRowString = variableContext.getParameter("startrow");
		int startRow = 0;
		if (startRowString != null && startRowString.length() > 0)
			startRow = Integer.parseInt(startRowString);

		// Gather the max
		String maxRowCountString = variableContext.getParameter("rowcount");
		int rowCount = 20;
		if (maxRowCountString != null && maxRowCountString.length() > 0)
			rowCount = Integer.parseInt(maxRowCountString);

		String[] ourActivities = new String[selectedActivities.size()];
		Iterator iter = selectedActivities.keySet().iterator();
		int zz = 0;
		while (iter.hasNext())
		{
			ourActivities[zz++] = (String)iter.next();
		}

		RegExpCriteria entityMatchObject = null;
		if (entityMatch.length() > 0)
			entityMatchObject = new RegExpCriteria(entityMatch,true);
		RegExpCriteria resultCodeMatchObject = null;
		if (resultCodeMatch.length() > 0)
			resultCodeMatchObject = new RegExpCriteria(resultCodeMatch,true);
		FilterCriteria criteria = new FilterCriteria(ourActivities,startTime,endTime,entityMatchObject,resultCodeMatchObject);

      out.write("\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"clickcolumn\" value=\"\"/>\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"startrow\" value='");
      out.print(Integer.toString(startRow));
      out.write("'/>\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"sortorder\" value='");
      out.print(org.apache.manifoldcf.ui.util.Encoder.attributeEscape(sortOrder.toString()));
      out.write("'/>\r\n");

		long count = connMgr.countHistoryRows(reportConnection,criteria);
		long maxCount = connMgr.getMaxRows();
		boolean hasMoreRows;
		if (count > maxCount)
		{
			hasMoreRows = false;

      out.write("\r\n");
      out.write("\t\t<table class=\"displaytable\"><tr><td class=\"message\">You have selected ");
      out.print(new Long(count).toString());
      out.write(" rows.  Maximum allowed is ");
      out.print(new Long(maxCount).toString());
      out.write(".</td></tr></table>\r\n");

		}
		else
		{
			BucketDescription idBucket = new BucketDescription(reportBucketDesc,false);

			IResultSet set = connMgr.genHistoryByteCount(reportConnection,criteria,sortOrder,idBucket,
				intervalMilliseconds,startRow,rowCount+1);


      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<table class=\"displaytable\">\r\n");
      out.write("\t\t    <tr class=\"headerrow\">\r\n");
      out.write("\t\t\t<td class=\"reportcolumnheader\"><a href=\"javascript:void(0);\" onclick='javascript:ColumnClick(\"idbucket\");'><nobr>");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.IdentifierClass"));
      out.write("</nobr></a></td>\r\n");
      out.write("\t\t\t<td class=\"reportcolumnheader\"><a href=\"javascript:void(0);\" onclick='javascript:ColumnClick(\"bytecount\");'><nobr>");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.HighestBandwidth"));
      out.write("</nobr></a></td>\r\n");
      out.write("\t\t\t<td class=\"reportcolumnheader\"><a href=\"javascript:void(0);\" onclick='javascript:ColumnClick(\"starttime\");'><nobr>");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.StartTime"));
      out.write("</nobr></a></td>\r\n");
      out.write("\t\t\t<td class=\"reportcolumnheader\"><a href=\"javascript:void(0);\" onclick='javascript:ColumnClick(\"endtime\");'><nobr>");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.EndTime"));
      out.write("</nobr></a></td>\r\n");
      out.write("\t\t    </tr>\r\n");

			zz = 0;
			hasMoreRows = (set.getRowCount() > rowCount);
			int iterCount = hasMoreRows?rowCount:set.getRowCount();
			while (zz < iterCount)
			{
			    IResultRow row = set.getRow(zz);
			    Object idBucketObject = row.getValue("idbucket");
			    String idBucketString;
			    if (idBucketObject == null)
				idBucketString = "";
			    else
				idBucketString = idBucketObject.toString();
			    String startTimeString = org.apache.manifoldcf.ui.util.Formatter.formatTime(Converter.asLong(row.getValue("starttime")));
			    String endTimeString = org.apache.manifoldcf.ui.util.Formatter.formatTime(Converter.asLong(row.getValue("endtime").toString()));
			    long byteCount = Converter.asLong(row.getValue("bytecount"));
			    double bandwidth = ((double)byteCount) * 1000.0 / intervalMilliseconds;


      out.write("\r\n");
      out.write("\t\t    <tr ");
      out.print("class=\""+((zz%2==0)?"evendatarow":"odddatarow")+"\"");
      out.write(">\r\n");
      out.write("\t\t        <td class=\"reportcolumncell\"><nobr>");
      out.print(org.apache.manifoldcf.ui.util.Encoder.bodyEscape(idBucketString));
      out.write("</nobr></td>\r\n");
      out.write("\t\t        <td class=\"reportcolumncell\">");
      out.print(new Double(bandwidth).toString());
      out.write("</td>\r\n");
      out.write("\t\t        <td class=\"reportcolumncell\"><nobr>");
      out.print(org.apache.manifoldcf.ui.util.Encoder.bodyEscape(startTimeString));
      out.write("</nobr></td>\r\n");
      out.write("\t\t        <td class=\"reportcolumncell\"><nobr>");
      out.print(org.apache.manifoldcf.ui.util.Encoder.bodyEscape(endTimeString));
      out.write("</nobr></td>\r\n");
      out.write("\t\t    </tr>\r\n");

				zz++;
			}

      out.write("\r\n");
      out.write("\t\t</table>\r\n");

		}

      out.write("\r\n");
      out.write("\t\t<table class=\"reportfootertable\">\r\n");
      out.write("\t\t    <tr class=\"reportfooterrow\">\r\n");
      out.write("\t\t\t<td class=\"reportfootercell\">\r\n");
      out.write("\t\t\t\t<nobr>\r\n");

		if (startRow == 0)
		{

      out.write("\r\n");
      out.write("\t\t\t\t\t");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.Previous"));
      out.write('\r');
      out.write('\n');

		}
		else
		{

      out.write("\r\n");
      out.write("\t\t\t\t\t<a href=\"javascript:void(0);\" onclick='");
      out.print("javascript:SetPosition("+Integer.toString(startRow-rowCount)+");");
      out.write("' alt=\"");
      out.print(Messages.getAttributeString(pageContext.getRequest().getLocale(),"maxbandwidthreport.PreviousPage"));
      out.write('"');
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.Previous"));
      out.write("</a>\r\n");

		}

      out.write("\r\n");
      out.write("\t\t\t\t</nobr>\r\n");
      out.write("\t\t\t\t<nobr>\r\n");

		if (hasMoreRows == false)
		{

      out.write("\r\n");
      out.write("\t\t\t\t\t");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.Next"));
      out.write('\r');
      out.write('\n');

		}
		else
		{

      out.write("\r\n");
      out.write("\t\t\t\t\t<a href=\"javascript:void(0);\" onclick='");
      out.print("javascript:SetPosition("+Integer.toString(startRow+rowCount)+");");
      out.write("' alt=\"");
      out.print(Messages.getAttributeString(pageContext.getRequest().getLocale(),"maxbandwidthreport.NextPage"));
      out.write('"');
      out.write('>');
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.Next"));
      out.write("</a>\r\n");

		}

      out.write("\r\n");
      out.write("\t\t\t\t</nobr>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td class=\"reportfootercell\">\r\n");
      out.write("\t\t\t\t<nobr>");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.Rows"));
      out.write("</nobr>\r\n");
      out.write("\t\t\t\t<nobr>");
      out.print(Integer.toString(startRow));
      out.write('-');
      out.print((hasMoreRows?Integer.toString(startRow+rowCount-1):"END"));
      out.write("</nobr>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td class=\"reportfootercell\">\r\n");
      out.write("\t\t\t\t<nobr>");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.RowsPerPage"));
      out.write("</nobr>\r\n");
      out.write("\t\t\t\t<nobr><input type=\"text\" name=\"rowcount\" size=\"5\" value='");
      out.print(Integer.toString(rowCount));
      out.write("'/></nobr>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t    </tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\r\n");

	}
	else
	{

      out.write("\r\n");
      out.write("\t\t<table class=\"displaytable\"><tr><td class=\"message\">");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.PleaseSelectAConnection"));
      out.write("</td></tr></table>\r\n");

	}

      out.write("\r\n");
      out.write("\t</form>\r\n");

}
else
{

      out.write("\r\n");
      out.write("\t\t<table class=\"displaytable\">\r\n");
      out.write("\t\t\t<tr><td class=\"separator\" colspan=\"1\"><hr/></td></tr>\r\n");
      out.write("\t\t\t<tr><td class=\"message\">");
      out.print(Messages.getBodyString(pageContext.getRequest().getLocale(),"maxbandwidthreport.PleaseTryAgainLater"));
      out.write("</td></tr>\r\n");
      out.write("\t\t</table>\r\n");

}

      out.write("\r\n");
      out.write("       </td>\r\n");
      out.write("      </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
