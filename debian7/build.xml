<?xml version="1.0" encoding="ISO-8859-1" ?>
<project name="Datafari_Debian7" default="clean-build" basedir=".">

	<!-- ========================= PROPERTIES ============================= -->

	<property name="datafari.context.app" value="Datafari" />

	<!-- If project.dir not set, set it as basedir (datafari directory) -->
	<condition property="project.dir" else="${basedir}/..">
		<isset property="project.dir" />
	</condition>

	<!-- Source directories -->
	<property name="elk.src.dir" value="${project.dir}/datafari-elk/target/dist/elk" />
	<property name="tomcat.src.dir" value="${project.dir}/datafari-tomcat/target/dist/tomcat" />
	<property name="solr.src.dir" value="${project.dir}/datafari-solr/target/dist/solr" />
	<property name="tika-config.src.dir" value="${project.dir}/datafari-tika-config/target" />
	<property name="datafari.src.dir" value="${project.dir}/datafari-core/target" />
	<property name="jena.src.dir" value="${project.dir}/datafari-jena/target" />
	<property name="mcf.src.dir" value="${project.dir}/datafari-mcf/target/dist/mcf" />
	<property name="realm.src.dir" value="${project.dir}/datafari-realm/target" />
	<property name="updateprocessor.src.dir" value="${project.dir}/datafari-updateprocessor/target" />
	<property name="datafarihandler.src.dir" value="${project.dir}/datafari-handler/target" />
	<property name="mcf-scripts.src.dir" value="${project.dir}/datafari-mcf-scripts/target" />
	<property name="cassandra.src.dir" value="${project.dir}/datafari-cassandra/target/dist/cassandra" />
	<property name="zookeeper.src.dir" value="${project.dir}/datafari-zookeeper/target/dist/zookeeper" />
	<property name="bin.src.dir" value="${project.dir}/bin" />
	<property name="tika.src.dir" value="${project.dir}/datafari-tika/target" />


	<!-- Output directories and self contained Datafari's Debian components -->
	<property name="debian.dir" value="${project.dir}/debian7" />
	<property name="debian.dist.dir" value="${debian.dir}/dist" />
	<property name="debian.bin.dir" value="${debian.dir}/bin" />


	<!-- debian binaries -->
	<property name="jvm.dir" value="${debian.dir}/jvm" />
	<property name="command.dir" value="${debian.dir}/command" />
	<property name="ocr.dir" value="${debian.dir}/ocr" />
	<property name="pgsql.dir" value="${debian.dir}/pgsql" />

	<!-- Installer directories -->
	<property name="installer.dir" value="${debian.dir}/installer" />
	<property name="installer.build.dir" value="${installer.dir}/build" />
	<!-- Debian installer direcotry -->
	<property name="installer.dist.dir" value="${installer.dir}/dist" />

	<target name="clean-build" depends="clean,package" />

	<target name="clean">
		<delete includeemptydirs="true" quiet="true">
			<fileset dir="${installer.dist.dir}" />
		</delete>

		<!-- Clean-up the installer intermediate directory -->
		<delete dir="${installer.build.dir}" />

		<!-- Clean-up the dist intermediate directory -->
		<delete dir="${debian.dist.dir}" />
	</target>

	<target name="package" depends="copyBinaries">
		<copy todir="${installer.build.dir}/datafari/opt/datafari">
			<fileset dir="${debian.dist.dir}" />
		</copy>
		
		<!-- Configure tomcat port - will probably change in the futur -->
		<replace file="${installer.build.dir}/datafari/opt/datafari/tomcat/conf/server.xml" >
		  <replacefilter>
		    <replacetoken>@TOMCAT_PORT@</replacetoken> 
		    <replacevalue>8080</replacevalue>
		  </replacefilter>
		  <replacefilter>
		    <replacetoken>@AJP_PORT@</replacetoken> 
		    <replacevalue>8009</replacevalue>
		  </replacefilter>
		  <replacefilter>
			<replacetoken>@ADMIN_PORT@</replacetoken> 
			<replacevalue>8005</replacevalue>
		  </replacefilter>
		</replace>
		
		<copy todir="${installer.build.dir}/datafari/DEBIAN">
			<fileset dir="${installer.dir}/DEBIAN" />
		</copy>
		<exec executable="chmod">
			<arg value="-R" />
			<arg value="755" />
			<arg value="${installer.build.dir}/datafari/DEBIAN" />
		</exec>
		<exec executable="dpkg-deb">
			<arg value="-b" />
			<arg value="${installer.build.dir}/datafari" />
		</exec>

		<!-- Output file -->
		<move file="${installer.build.dir}/datafari.deb" todir="${installer.dist.dir}" />

	</target>

	<target name="tomcat-dev" depends="copyBinaries">
		<copy todir="${project.dir}/tomcat-dev">
    		<fileset dir="${debian.dist.dir}/tomcat"/>
  		</copy>
		<replace file="${project.dir}/tomcat-dev/conf/server.xml" >
		  <replacefilter>
		    <replacetoken>@TOMCAT_PORT@</replacetoken> 
		    <replacevalue>9080</replacevalue>
		  </replacefilter>
		  <replacefilter>
		    <replacetoken>@AJP_PORT@</replacetoken> 
		    <replacevalue>9009</replacevalue>
		  </replacefilter>
		  <replacefilter>
			<replacetoken>@ADMIN_PORT@</replacetoken> 
			<replacevalue>9005</replacevalue>
		  </replacefilter>
		</replace>
	</target>
	

	<target name="all" depends="clean,package,tomcat-dev" />

	<target name="copyBinaries">

		<mkdir dir="${debian.dist.dir}/logs" />
		<mkdir dir="${debian.dist.dir}/pid" />

		<!-- These components need a build with Maven -->

		<!-- Copy Tomcat  -->
		<copy todir="${debian.dist.dir}/tomcat">
			<fileset dir="${tomcat.src.dir}">
			</fileset>
		</copy>


		<!-- Copy Solr -->
		<copy todir="${debian.dist.dir}/solr">
			<fileset dir="${solr.src.dir}">
			</fileset>
		</copy>

		<!-- Copy Datafari update processor -->
		<copy todir="${debian.dist.dir}/solr/solr_home/FileShare/lib/custom">
			<fileset dir="${updateprocessor.src.dir}">
				<include name="*.jar" />
			</fileset>
		</copy>

		<!-- Copy Datafari update handler -->
		<copy todir="${debian.dist.dir}/solr/solr_home/FileShare/lib/custom">
			<fileset dir="${datafarihandler.src.dir}">
				<include name="*.jar" />
				<include name="dependency/*.jar" />
			</fileset>
		</copy>

		<!-- Copy Datafari update handler dependencies-->
		<copy todir="${debian.dist.dir}/solr/solr_home/FileShare/lib/custom">
			<fileset dir="${datafarihandler.src.dir}/dependency">
				<include name="*.jar" />
			</fileset>
		</copy>
		
		<!-- Copy Tika jars to Solr -->
		<copy todir="${debian.dist.dir}/solr/solr_home/FileShare/lib/extraction">
			<fileset dir="${tika.src.dir}/dependency">
				<include name="*.jar" />
				<exclude name="language-detector*" />
			</fileset>
		</copy>

		<!-- Copy only useful Jena libraries to Solr FileShare core directory -->
		<copy toDir="${debian.dist.dir}/solr/solr_home/FileShare/lib/jena">
			<fileset dir="${jena.src.dir}/dependency">
				<include name="*.jar" />
			</fileset>
		</copy>

		<copy todir="${debian.dist.dir}/elk">
			<fileset dir="${elk.src.dir}">
			</fileset>
		</copy>

		<copy todir="${debian.dist.dir}/mcf">
			<fileset dir="${mcf.src.dir}" />
		</copy>
		
		<!-- Copy Tika jars to MCF -->
    <copy todir="${debian.dist.dir}/mcf/mcf_home/connector-common-lib">
      <fileset dir="${tika.src.dir}/dependency">
        <include name="*.jar" />
      </fileset>
    </copy>

		<!-- Copy Tika OCR config in mcf lib -->
		<copy todir="${debian.dist.dir}/mcf/mcf_home/lib">
			<fileset dir="${tika-config.src.dir}">
				<include name="*.jar" />
			</fileset>
		</copy>


		<!-- Copy Manifold CF to Tomcat auto-deploy directory -->
		<move toDir="${debian.dist.dir}/tomcat/webapps" overwrite="true" force="true">
			<fileset dir="${debian.dist.dir}/mcf/war" />
			<globmapper from="*.war" to="datafari-*.war" />
		</move>

		<!-- Copy Datafari -->
		<copy file="${datafari.src.dir}/Datafari.war" todir="${debian.dist.dir}/tomcat/webapps" />

		<!-- Copy Realm -->
		<copy todir="${debian.dist.dir}/tomcat/lib">
			<fileset dir="${realm.src.dir}">
				<include name="*.jar" />
			</fileset>
		</copy>

		<!-- Copy Realm - dependencies-->
		<copy todir="${debian.dist.dir}/tomcat/lib">
			<fileset dir="${realm.src.dir}/dependency">
				<include name="*.jar" />
			</fileset>
		</copy>

		<copy todir="${debian.dist.dir}/cassandra">
			<fileset dir="${cassandra.src.dir}" />
		</copy>

		<copy todir="${debian.dist.dir}/bin">
			<fileset dir="${bin.src.dir}" />
		</copy>

		<!-- Copy BackupManifoldCF script -->
		<copy todir="${debian.dist.dir}/bin/common">
			<fileset dir="${mcf-scripts.src.dir}">
				<include name="*.jar" />
			</fileset>
		</copy>

		<copy todir="${debian.dist.dir}/ocr">
			<fileset dir="${ocr.dir}" />
		</copy>

		<copy todir="${debian.dist.dir}/pgsql">
			<fileset dir="${pgsql.dir}" />
		</copy>

		<copy todir="${debian.dist.dir}/jvm">
			<fileset dir="${jvm.dir}" />
		</copy>

		<copy todir="${debian.dist.dir}/zookeeper">
			<fileset dir="${zookeeper.src.dir}" />
		</copy>


		<copy todir="${debian.dist.dir}/command">
			<fileset dir="${command.dir}" />
		</copy>


		<copy todir="${debian.dist.dir}/bin">
			<fileset dir="${debian.bin.dir}" />
		</copy>

		<!-- Add txt files -->
		<copy file="${project.dir}/LICENSE.txt" todir="${debian.dist.dir}/" />
		<copy file="${project.dir}/README.txt" todir="${debian.dist.dir}/" />
		<copy file="${project.dir}/CHANGES.txt" todir="${debian.dist.dir}/" />
	</target>

</project>
